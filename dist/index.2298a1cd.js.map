{"mappings":"AAAA,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,WAA2E,EAAE;AAEnF,cAAc,gBAAgB,CAAC,SAAS;AAExC;AAEA,SAAS,aAAmB;IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;QACxC,MAAM,cAAc,SAAS,aAAa,CAAC;QAC3C,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,MAAM,eAAe,SAAS,aAAa,CAAC;QAC5C,aAAa,SAAS,GAAG;QACzB,aAAa,gBAAgB,CAAC,SAAS;QACvC,WAAW,SAAS,GAAG;QACvB,WAAW,SAAS,GAAG;QAEvB,IAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK,EAAE;YAChC,SAAS,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC,SAAS;YAC1C,SAAS,SAAS,GAAG;YACrB,YAAY,SAAS,GAAG;YACxB,aAAa,SAAS,GAAG;YACzB,YAAY,WAAW,CAAC;YACxB,YAAY,WAAW,CAAC;YACxB,YAAY,WAAW,CAAC;YACxB,YAAY,WAAW,CAAC;YACxB,YAAY,WAAW,CAAC;YACxB,WAAW,gBAAgB,CAAC,SAAS;YACrC,QAAQ,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI;QAC3B,CAAC;QAED,SAAS,eAAqB;YAC5B,QAAQ,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI;YAC9B,QAAQ,GAAG,CAAC,QAAQ,CAAC,EAAE;YACvB,WAAW,mBAAmB,CAAC,SAAS;YACxC,WAAW,gBAAgB,CAAC,SAAS;YAErC,IAAI,QAAQ,CAAC,EAAE,CAAC,WAAW,KAAK,IAAI,EAAE;gBACpC,YAAY,SAAS,GAAG;gBACxB,SAAS,SAAS,GAAG;gBACrB,WAAW,SAAS,GAAG;gBACvB,WAAW,SAAS,GAAG;YACzB,CAAC;QACH;QAEA,SAAS,cAAoB;YAC3B,QAAQ,CAAC,EAAE,CAAC,WAAW,GAAG,KAAK;YAC/B,QAAQ,GAAG,CAAC,QAAQ,CAAC,EAAE;YAEvB,IAAI,QAAQ,CAAC,EAAE,CAAC,WAAW,KAAK,KAAK,EAAE;gBACrC,YAAY,SAAS,GAAG;gBACxB,SAAS,SAAS,GAAG;gBACrB,WAAW,SAAS,GAAG;gBACvB,WAAW,SAAS,GAAG;gBACvB,WAAW,mBAAmB,CAAC,SAAS;gBACxC,WAAW,gBAAgB,CAAC,SAAS;YACvC,CAAC;QACH;QAEA,SAAS,aAAmB;YAC1B,SAAS,MAAM,CAAC,GAAG;YACnB,YAAY,SAAS,GAAG;YACxB,QAAQ,GAAG,CAAC;YACZ,IAAK,IAAI,KAAI,GAAG,KAAI,SAAS,MAAM,EAAE,KACnC,QAAQ,CAAC,GAAE,CAAC,MAAM,GAAG,KAAK;YAE5B;QACF;IACF;AACF;AAEA,SAAS,gBAAsB;IAC7B,MAAM,aAAa,UAAU,KAAK,CAAC,IAAI;IAEvC,IAAI,CAAC,YAAY;QACf,MAAM;QACN;IACF,CAAC;IAED,MAAM,OAAO;QACX,WAAW;QACX,aAAa,KAAK;QAClB,QAAQ,KAAK;IACf;IAEA,SAAS,IAAI,CAAC;IACd,QAAQ,GAAG,CAAC;IAEZ,UAAU,KAAK,GAAG;IAClB;AACF;AAGA","sources":["src/js/main.ts"],"sourcesContent":["const ListElement = document.getElementById(\"ongoing-tasks-container\") as HTMLElement;\nconst newTaskButton = document.getElementById(\"create-btn\") as HTMLButtonElement;\nconst userInput = document.getElementById(\"input-field\") as HTMLInputElement;\nconst taskList: { userInput: string, isCompleted: boolean, onList: boolean }[] = [];\n\nnewTaskButton.addEventListener(\"click\", createNewTask);\n\ncreateHTML();\n\nfunction createHTML(): void {\n  for (let i = 0; i < taskList.length; i++) {\n    const taskElement = document.createElement(\"li\") as HTMLLIElement;\n    const userText = document.createElement(\"p\") as HTMLParagraphElement;\n    const doneButton = document.createElement(\"button\") as HTMLButtonElement;\n    const removeButton = document.createElement(\"button\") as HTMLButtonElement;\n    removeButton.innerText = \"X\";\n    removeButton.addEventListener(\"click\", removeTask);\n    doneButton.innerText = \"Done\";\n    doneButton.className = \"complete-task-btn\";\n\n    if (taskList[i].onList === false) {\n      userText.innerText = taskList[i].userInput;\n      userText.className = \"ongoing-text\";\n      taskElement.className = \"ongoing-task\";\n      removeButton.className = \"remove-btn\";\n      taskElement.appendChild(userText);\n      taskElement.appendChild(removeButton);\n      ListElement.appendChild(taskElement);\n      taskElement.appendChild(doneButton);\n      taskElement.appendChild(removeButton);\n      doneButton.addEventListener(\"click\", completeTask);\n      taskList[i].onList = true;\n    }\n\n    function completeTask(): void {\n      taskList[i].isCompleted = true;\n      console.log(taskList[i]);\n      doneButton.removeEventListener(\"click\", completeTask);\n      doneButton.addEventListener(\"click\", makeOngoing);\n\n      if (taskList[i].isCompleted === true) {\n        taskElement.className = \"completed-task\";\n        userText.className = \"completed-text\";\n        doneButton.innerText = \"Undo\";\n        doneButton.className = \"undo-btn\";\n      }\n    }\n\n    function makeOngoing(): void {\n      taskList[i].isCompleted = false;\n      console.log(taskList[i]);\n\n      if (taskList[i].isCompleted === false) {\n        taskElement.className = \"ongoing-task\";\n        userText.className = \"ongoing-text\";\n        doneButton.innerText = \"Done\";\n        doneButton.className = \"complete-task-btn\";\n        doneButton.removeEventListener(\"click\", makeOngoing);\n        doneButton.addEventListener(\"click\", completeTask);\n      }\n    }\n\n    function removeTask(): void {\n      taskList.splice(i, 1);\n      ListElement.innerHTML = \"\";\n      console.log(taskList);\n      for (let i = 0; i < taskList.length; i++) {\n        taskList[i].onList = false;\n      }\n      createHTML();\n    }\n  }\n}\n\nfunction createNewTask(): void {\n  const inputValue = userInput.value.trim();\n\n  if (!inputValue) {\n    alert(\"Du måste skriva något i fältet!\");\n    return;\n  }\n\n  const task = {\n    userInput: inputValue,\n    isCompleted: false,\n    onList: false,\n  };\n\n  taskList.push(task);\n  console.log(taskList);\n\n  userInput.value = \"\";\n  createHTML();\n}\n\n\ncreateHTML();\n"],"names":[],"version":3,"file":"index.2298a1cd.js.map","sourceRoot":"/__parcel_source_root/"}